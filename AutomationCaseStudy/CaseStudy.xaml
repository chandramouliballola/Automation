<Activity mc:Ignorable="sap sap2010" x:Class="CaseStudy" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1692,6792" sap2010:WorkflowViewState.IdRef="CaseStudy_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/python" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="76">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Python</x:String>
      <x:String>UiPath.Python.Activities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Python.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CaseStudy" sap:VirtualizedContainerService.HintSize="1702,6727" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="[IO.Directory.GetCurrentDirectory.ToString]" Name="currentPath" />
      <Variable x:TypeArguments="x:String" Default="Dataset.csv" Name="fileName" />
      <Variable x:TypeArguments="x:String" Default="[currentPath + &quot;\&quot;+fileName]" Name="filePath" />
      <Variable x:TypeArguments="x:Boolean" Name="fileExists" />
      <Variable x:TypeArguments="x:String" Default="ExcelDataset.xlsx" Name="pythonInputFileName" />
      <Variable x:TypeArguments="x:String" Default="[currentPath+&quot;\&quot;+pythonInputFileName]" Name="pythonInputFilePath" />
      <Variable x:TypeArguments="x:String" Default="top_five_SLA_miss.xlsx" Name="topFiveSLABreach" />
      <Variable x:TypeArguments="x:String" Default="top_five_SLA_met.xlsx" Name="topFiveSLAMet" />
      <Variable x:TypeArguments="x:String" Default="SLA_Breached_File.xlsx" Name="SLABreach" />
      <Variable x:TypeArguments="x:String" Default="[currentPath+&quot;\&quot;+topFiveSLABreach]" Name="topFiveSLABreachFilePath" />
      <Variable x:TypeArguments="x:String" Default="[currentPath+&quot;\&quot;+topFiveSLAMet]" Name="topFiveSLAMetFilePath" />
      <Variable x:TypeArguments="x:String" Default="[currentPath+&quot;\&quot;+SLABreach]" Name="SLABreachFilePath" />
      <Variable x:TypeArguments="x:String" Default="AutomationCaseStudyPython.py" Name="pythonSourceFileName" />
      <Variable x:TypeArguments="x:String" Default="[currentPath+&quot;\&quot;+pythonSourceFileName]" Name="pythonSourceFilePath" />
      <Variable x:TypeArguments="x:String" Default="mail@UIPath.com" Name="FromEmailAddress" />
      <Variable x:TypeArguments="x:String" Name="ToEmailAddress" />
      <Variable x:TypeArguments="x:String" Default="sandbox.smtp.mailtrap.io" Name="server" />
      <Variable x:TypeArguments="x:Int32" Default="2525" Name="port" />
      <Variable x:TypeArguments="x:String" Default="f053f8b14594ee" Name="loginid" />
      <Variable x:TypeArguments="x:String" Default="dc0a5068655f1d" Name="loginpassword" />
      <Variable x:TypeArguments="x:String" Name="emailsubject" />
      <Variable x:TypeArguments="x:String" Name="emailbody" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1640,62" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="Automation workflow process starts" />
    <ui:FileExistsX DisplayName="Check if Incident Data File Exists" Exists="[fileExists]" sap:VirtualizedContainerService.HintSize="1640,133" sap2010:WorkflowViewState.IdRef="FileExistsX_1" Path="[filePath]" />
    <If Condition="[fileExists = True]" DisplayName="If Incident File Exists" sap:VirtualizedContainerService.HintSize="1640,6341" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="1195,6182" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="sd:DataTable" Name="incidentData" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="1133,62" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="[filePath + &quot;File Exists&quot;]" />
          <ui:FileExistsX DisplayName="Check python source file exists" Exists="[fileExists]" sap:VirtualizedContainerService.HintSize="1133,133" sap2010:WorkflowViewState.IdRef="FileExistsX_2" Path="[pythonSourceFilePath]" />
          <If Condition="[fileExists=True]" sap:VirtualizedContainerService.HintSize="1133,5796" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="688,5637" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="iterVariable" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="626,62" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="Processing Incident .csv data and generating ExcelData for Python processing" />
                <ui:ReadCsvFile DataTable="[incidentData]" Delimitator="Comma" DisplayName="Read CSV" FilePath="[filePath]" sap:VirtualizedContainerService.HintSize="626,153" sap2010:WorkflowViewState.IdRef="ReadCsvFile_2" />
                <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="626,757" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
                  <ueab:ExcelProcessScopeX.Body>
                    <ActivityAction x:TypeArguments="ui:IExcelProcess">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="592,670" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="530,559" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" UseTemplate="True" WorkbookPath="[pythonInputFilePath]">
                          <ueab:ExcelApplicationCard.Body>
                            <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="PythonInputFile" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,269" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ueab:WriteRangeX Destination="[PythonInputFile.Sheet(&quot;Dataset&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,158" sap2010:WorkflowViewState.IdRef="WriteRangeX_3" IgnoreEmptySource="False" Source="[incidentData]" />
                              </Sequence>
                            </ActivityAction>
                          </ueab:ExcelApplicationCard.Body>
                        </ueab:ExcelApplicationCard>
                      </Sequence>
                    </ActivityAction>
                  </ueab:ExcelProcessScopeX.Body>
                </ueab:ExcelProcessScopeX>
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="626,62" sap2010:WorkflowViewState.IdRef="WriteLine_7" Text="ExcelDataset for python processing is generated" />
                <p:PythonScope OperationTimeout="{x:Null}" DisplayName="Python Scope" sap:VirtualizedContainerService.HintSize="626,412" sap2010:WorkflowViewState.IdRef="PythonScope_1" Path="C:\ProgramData\Anaconda3\" WorkingFolder="[currentPath]">
                  <p:PythonScope.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="PythonEngineSessionProperty" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,375" sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="338,62" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="[&quot;Processing of &quot;+pythonSourceFileName+&quot; started.&quot;]" />
                        <p:RunScript Code="{x:Null}" DisplayName="Run Python Script" sap:VirtualizedContainerService.HintSize="338,60" sap2010:WorkflowViewState.IdRef="RunScript_1" ScriptFile="[pythonSourceFilePath]" />
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="338,62" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="[&quot;Processing of &quot;+pythonSourceFileName+&quot; is completed.&quot;]" />
                      </Sequence>
                    </ActivityAction>
                  </p:PythonScope.Body>
                </p:PythonScope>
                <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="626,1521" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_3">
                  <ueab:ExcelProcessScopeX.Body>
                    <ActivityAction x:TypeArguments="ui:IExcelProcess">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="592,1434" sap2010:WorkflowViewState.IdRef="Sequence_11">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="530,62" sap2010:WorkflowViewState.IdRef="WriteLine_11" Text="Email process starts for SLA breached Incidents" />
                        <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="530,1119" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_3" ResizeWindow="None" WorkbookPath="[topFiveSLABreachFilePath]">
                          <ueab:ExcelApplicationCard.Body>
                            <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="topSLABreach" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,852" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ueab:ExcelForEachRowX DisplayName="For Each Excel Row" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="434,741" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_1" Range="[topSLABreach.Sheet(&quot;Sheet1&quot;)]" SaveAfterEachRow="False">
                                  <ueab:ExcelForEachRowX.Body>
                                    <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                                      <ActivityAction.Argument1>
                                        <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                                      </ActivityAction.Argument1>
                                      <ActivityAction.Argument2>
                                        <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                      </ActivityAction.Argument2>
                                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,560" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="EmailToSend" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_15">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[ToEmailAddress]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[CurrentRow.ByIndex(6)]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_16">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[emailbody]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">["Hi "+CurrentRow.ByIndex(5)+","+vbCrlf+vbCrlf+CurrentRow.ByIndex(0)+"has breached SLA"+vbCrlf+vbCrlf+"Kindly Resolve the Incidnet as soon as possible"+vbCrlf+vbCrlf+"Regards,"+vbCrlf+"Incident Management Team"]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_17">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[emailsubject]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[CurrentRow.ByIndex(0)+" has breached SLA"]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" Body="[emailbody]" DisplayName="Send SMTP Mail Message" Email="[loginid]" EnableSSL="True" From="[FromEmailAddress]" sap:VirtualizedContainerService.HintSize="338,146" sap2010:WorkflowViewState.IdRef="SendMail_1" IgnoreCRL="False" IsBodyHtml="False" Password="[loginpassword]" Port="[port]" SecureConnection="Auto" Server="[server]" Subject="[emailsubject]" To="[ToEmailAddress]">
                                          <ui:SendMail.Files>
                                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                                          </ui:SendMail.Files>
                                        </ui:SendMail>
                                      </Sequence>
                                    </ActivityAction>
                                  </ueab:ExcelForEachRowX.Body>
                                </ueab:ExcelForEachRowX>
                              </Sequence>
                            </ActivityAction>
                          </ueab:ExcelApplicationCard.Body>
                        </ueab:ExcelApplicationCard>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="530,62" sap2010:WorkflowViewState.IdRef="WriteLine_12" Text="Email process ends for SLA breached Incidents" />
                      </Sequence>
                    </ActivityAction>
                  </ueab:ExcelProcessScopeX.Body>
                </ueab:ExcelProcessScopeX>
                <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="626,1521" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_5">
                  <ueab:ExcelProcessScopeX.Body>
                    <ActivityAction x:TypeArguments="ui:IExcelProcess">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="592,1434" sap2010:WorkflowViewState.IdRef="Sequence_19">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="530,62" sap2010:WorkflowViewState.IdRef="WriteLine_13" Text="Email process starts for SLA met Incidents" />
                        <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="530,1221" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_5" ResizeWindow="None" WorkbookPath="[topFiveSLAMetFilePath]">
                          <ueab:ExcelApplicationCard.Body>
                            <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="topSLAmet" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,954" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ueab:ExcelForEachRowX DisplayName="For Each Excel Row" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="434,741" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_3" Range="[topSLAmet.Sheet(&quot;Sheet1&quot;)]" SaveAfterEachRow="False">
                                  <ueab:ExcelForEachRowX.Body>
                                    <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                                      <ActivityAction.Argument1>
                                        <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                                      </ActivityAction.Argument1>
                                      <ActivityAction.Argument2>
                                        <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                      </ActivityAction.Argument2>
                                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,560" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="x:String" Name="EmailToSend" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_24">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[ToEmailAddress]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[CurrentRow.ByIndex(6)]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_25">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[emailbody]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">["Hi "+CurrentRow.ByIndex(5)+","+vbCrlf+vbCrlf+CurrentRow.ByIndex(0)+" has been resolved with SLA."+vbCrlf+vbCrlf+"Keep up the good work"+vbCrlf+vbCrlf+"Regards,"+vbCrlf+"Incident Management Team"]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_26">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[emailsubject]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[CurrentRow.ByIndex(0)+" has been resolved SLA"]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" Body="[emailbody]" DisplayName="Send SMTP Mail Message" Email="[loginid]" EnableSSL="True" From="[FromEmailAddress]" sap:VirtualizedContainerService.HintSize="338,146" sap2010:WorkflowViewState.IdRef="SendMail_4" IgnoreCRL="False" IsBodyHtml="False" Password="[loginpassword]" Port="[port]" SecureConnection="Auto" Server="[server]" Subject="[emailsubject]" To="[ToEmailAddress]">
                                          <ui:SendMail.Files>
                                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                                          </ui:SendMail.Files>
                                        </ui:SendMail>
                                      </Sequence>
                                    </ActivityAction>
                                  </ueab:ExcelForEachRowX.Body>
                                </ueab:ExcelForEachRowX>
                                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="434,62" sap2010:WorkflowViewState.IdRef="WriteLine_14" Text="Email process ends  for SLA met Incidents" />
                              </Sequence>
                            </ActivityAction>
                          </ueab:ExcelApplicationCard.Body>
                        </ueab:ExcelApplicationCard>
                      </Sequence>
                    </ActivityAction>
                  </ueab:ExcelProcessScopeX.Body>
                </ueab:ExcelProcessScopeX>
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="626,62" sap2010:WorkflowViewState.IdRef="WriteLine_15" Text="Sending email on all SLA breached Incidents to Manager" />
                <Assign sap:VirtualizedContainerService.HintSize="626,61" sap2010:WorkflowViewState.IdRef="Assign_27">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[ToEmailAddress]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Manager@email.com</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="626,61" sap2010:WorkflowViewState.IdRef="Assign_28">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[emailbody]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["Hi Manager,"+vbCrlf+vbCrlf+"Please find the attached report of breached SLA Incidents."+vbCrlf+vbCrlf+"Regards,"+vbCrlf+"Incident Management Team"]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="626,61" sap2010:WorkflowViewState.IdRef="Assign_29">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[emailsubject]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">SLA breached Incidents</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" Body="[emailbody]" DisplayName="Send SMTP Mail Message" Email="[loginid]" EnableSSL="True" From="[FromEmailAddress]" sap:VirtualizedContainerService.HintSize="626,149" sap2010:WorkflowViewState.IdRef="SendMail_5" IgnoreCRL="False" IsBodyHtml="False" Password="[loginpassword]" Port="[port]" SecureConnection="Auto" Server="[server]" Subject="[emailsubject]" To="[ToEmailAddress]">
                  <ui:SendMail.Files>
                    <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                      <InArgument x:TypeArguments="x:String">[SLABreachFilePath]</InArgument>
                    </scg:List>
                  </ui:SendMail.Files>
                </ui:SendMail>
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="626,62" sap2010:WorkflowViewState.IdRef="WriteLine_16" Text="Email sent to Manager on all SLA breached Incidents" />
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="626,62" sap2010:WorkflowViewState.IdRef="WriteLine_17" Text="Automation workflow process ends" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="400,196" sap2010:WorkflowViewState.IdRef="Sequence_10">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Python Source File doesn't exsist" sap:VirtualizedContainerService.HintSize="338,85" sap2010:WorkflowViewState.IdRef="MessageBox_9" Text="[&quot;Please place the python source file as &quot;+pythonSourceFileName+&quot; in &quot;+currentPath+&quot; folder&quot;]" />
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="400,196" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Incident File doesn't exsist" sap:VirtualizedContainerService.HintSize="338,85" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[&quot;Please place the Incident Data file as &quot;+fileName+&quot; in &quot;+currentPath+&quot; folder&quot;]" />
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>